---
// Fetch your about page content from the WordPress API

import Layout from "../../Base.astro";

export async function getStaticPaths() {
	const response = await fetch(`${import.meta.env.PUBLIC_WP_URL}/work?per_page=100&_embed`);
	const posts = await response.json();
	return posts.map((post) => {
		return {
			params: { slug: post.slug },
			props: {
				title: post.title.rendered,
				description: post.excerpt.rendered.replace(/(<([^>]+)>)/gi, ''),
				image: [post.fimg_url],
				content: post.content.rendered,
				tagIds: post.tags
			}
		};
	});
}

const { title, content, description, image, tagIds } = Astro.props;

let tags = [];
for (const tag of tagIds) {
	const tagResponse = await fetch(`${import.meta.env.PUBLIC_WP_URL}/tags/${tag}`);
	const tag_object = await tagResponse.json();
	tags.push(tag_object);
}
---

<Layout title={title} description={description} image={image} bodyClass="work-post" >
	<article class="wrapper">
		<h1 data-splitting data-lg-reveal="fade" data-lg-reveal-stagger="0.1" set:html={title} />
		<p data-lg-reveal="layer-to-left" data-lg-reveal-delay="0.2" class="tags">
			{tags.map(
				(tag, i) => 
				<>
					{tags.length-1 == i && tags.length > 2 && (<>and </>)}<a href=`/services/${tag.slug}/`>{tag.name}</a>{tags.length-1 != i && (<>, </>)}
				</>
			)}
		</p>
		<div data-lg-reveal="fade" data-lg-reveal-stagger="0.3" set:html={content} />
	</article>
</Layout>
<script>
	import Splitting from 'splitting';
	// intialize splitting for text animations
	Splitting({ by: 'words' });
</script>
<style lang="scss" is:global>
// work single
.work-post {
	h1 {
		margin: 8rem 0 12rem;
	}
	.tags {
		opacity: 0.5;
		margin: -11rem auto 10rem auto;
		a {
			text-decoration: none;
			&:hover,
			&:focus {
				text-decoration: underline;
			}
		}
		&:empty {
			display: none;
		}
	}
	.footer {
		margin-top: 10rem;
	}
}
</style>
