---
import { Img } from 'astro-imagetools/components';

export interface Props {
	tagline: string;
	title: string;
	description: string;
	dark: boolean;
	lottieFile: string;
	mediaFront: string;
	mediaMiddle: string;
	mediaBack: string;
}

const {
	tagline = '',
	title = 'H1 Heading',
	lottieFile = '',
	description = '',
	dark = false,
	mediaFront = '',
	mediaMiddle = '',
	mediaBack = ''
} = Astro.props;

let cssClasses = 'simple-hero';
let wrapper = 'wrapper wrapper--narrow';
let mediaContent;
if (dark) {
	cssClasses = cssClasses + ' simple-hero--dark';
}
if (mediaFront) {
	cssClasses = cssClasses + ' simple-hero--media';
}
if (lottieFile) {
	cssClasses = cssClasses + ' simple-hero--lottie';
}
---

<section class={cssClasses}>
	<div class={wrapper}>
		{ lottieFile && 
		<div
			data-lg-lottie=`/animations/${lottieFile}` 
			data-lg-lottie-autoplay="true"
			data-lg-lottie-loop="true"></div>
		}
		{
			tagline && (
				<p class='simple-hero-tagline' data-lg-reveal='fade'>
					{tagline}
				</p>
			)
		}
		<h1 transition:name={title} data-lg-reveal='fade' data-lg-reveal-stagger='0.05' class='simple-hero-h1' set:html={title} />
		{
			description && (
				<p data-lg-reveal='fade' data-lg-reveal-delay='.1' class='simple-hero-description'>
					{description}
				</p>
			)
		}
		{
			mediaFront && (
				<div class='simple-hero-media' data-lg-reveal='fade' data-lg-reveal-stagger='.1'>
					<Img src={mediaBack} alt='' placeholder='none' />
					<div data-lg-parallax data-lg-parallax-amplitude='0.3'>
						<Img src={mediaMiddle} alt='' placeholder='none' />
					</div>
					<div data-lg-parallax data-lg-parallax-amplitude='0.15' data-lg-parallax-anchor='bottom'>
						<Img src={mediaFront} alt='' placeholder='none' />
					</div>
				</div>
			)
		}
	</div>
</section>

<style lang="scss">
	.simple-hero {
		padding: 6rem 0;
		@media (max-width: 767px) {
			padding: 3rem 0 1rem;
		}
		&--dark {
			background: var(--black);
			color: white;
		}
		.wrapper {
			display: grid;
			grid-template-columns: 1fr 1.5fr;
			@media (max-width: 960px) {
				display: block;
			}
			align-items: center;
			gap: 1rem 4rem;
		}
		&--media {
			@media (max-width: 767px) {
				padding-bottom: 6rem;
			}
			.wrapper {
				grid-template-columns: 1fr 0.9fr;
			}
		}
		&--lottie {
			.wrapper {
				max-width: 1000px;
				align-items: start;
				grid-template-columns: 1fr 3fr;
			}
			div[data-lg-lottie] {
				grid-row: span 3;
				position: relative;
				&:after {
					content: '';
					position: absolute;
					width: 60%;
					height: 60%;
					background: var(--light-teal);
					left: 50%;
					top: 50%;
					transform: translate(-50%, -50%);
					z-index: -1;
				}
			}
			h1,
			p {
				grid-column: 2;
			}
		}
		&-tagline {
			grid-column: 1;
			margin: 0;
			color: var(--purple);
			font-family: var(--sans-serif);
			font-weight: 600;
		}
		&-h1 {
			grid-column: 1;
		}
		&-description {
			grid-column: 2;
			margin: 0 0 2rem;
			max-width: none;
			.simple-hero--media & {
				grid-column: 1;
			}
		}
		&-media {
			grid-row: 1 / span 3;
			grid-column: 2;
			position: relative;
			aspect-ratio: 1/1;
			overflow: hidden;
			margin-bottom: -12rem;
			text-align: center;
			> div {
				position: absolute;
				top: 0;
				width: 100%;
				overflow: hidden;
				&:nth-of-type(1) {
					z-index: 1;
				}
				&:nth-of-type(2) {
					z-index: 2;
				}
				&:nth-of-type(3) {
					z-index: 3;
				}
				img {
				}
			}
		}
	}
</style>